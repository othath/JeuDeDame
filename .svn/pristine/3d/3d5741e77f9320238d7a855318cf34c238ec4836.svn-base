/* bibliothèques */
#include <stdio.h>
#include "input.h"

struct Deplacement dep;

int estLettre(int* i, char input[]){
    /* 
     * vérifie si le caractère est une lettre entre A et J 
     * renvoie 0 si vrai, -1 sinon.
     */
    if((int)input[*i]>=(int)'A' && (int)input[*i]<=(int)'J'){
        if(*i == 0) dep.ci = (int)input[*i]%13;
        else if(*i > 2) dep.cf = (int)input[*i]%13;
        *i += 1;
        return 0;
    }
    for(int j=0;j<*i;j++){
        printf(" ");
    }
    printf("^Erreur, lettre entre A et J attendue !\n");
    return -1;
}

int estNombre(int* i, char input[]){
    /* vérifie si le caractère est un nombre entre 1 et 10 */
    if((int)input[*i]>=(int)'1' && (int)input[*i]<=(int)'9'){
        if((int)input[*i]==(int)'1' && (int)input[*i+1]==(int)'0'){ // on a un 10
            if(*i < 2) dep.li = 9;
            else if(*i >= 2) dep.lf = 9;
            *i += 2;
            return 0;
        }
        else if((int)input[*i]>=(int)'1' && (int)input[*i]<=(int)'9'){ // entre 1 et 9
            if(*i < 2) dep.li = (int)input[*i]-(int)'0'-1;
            else if(*i >= 2) dep.lf = (int)input[*i]-(int)'0'-1;
            *i += 1;
            return 0;
        }
    }
    for(int j=0;j<*i;j++){
        printf(" ");
    }
    printf(" ^Erreur, nombre entre 1 et 10 attendu !\n");
    return -1;
}

int checkInput(char input[]){
    /*
     * vérifie si l'input est bien de la forme :
     *      A1 C9
     *      A10 C9
     *      A3 C10
     * si c'est le cas, renvoie 0, sinon -1
     * 
     * on le fait en 5 vérifs (1ere lettre, 1er nombre, espace, 2eme lettre, 2eme nombre)
     */
    int i = 0;
    if(estLettre(&i,input) == 0){ // 1ere vérif OK
        if(estNombre(&i,input) == 0){ // 2eme vérif OK
            if((int)input[i]==(int)' '){ // 3eme vérif OK
                i++;
                if(estLettre(&i,input) == 0){ // 4eme vérif OK
                    if(estNombre(&i,input) == 0){ // 5eme vérif OK
                        return 0;
                    }
                }
            }
        }
    }
    return -1;
}

int *tableauDeplacement(){
    int depl[4];
    depl[0] = dep.ci;
    depl[1] = dep.li;
    depl[2] = dep.cf;
    depl[3] = dep.lf;
    //printf("%i - %i - %i - %i\n", depl[0],depl[1],depl[2],depl[3]);
    return depl;
}
